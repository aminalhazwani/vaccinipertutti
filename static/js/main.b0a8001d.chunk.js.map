{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","numberLoc","formatLocale","numberItIT","fmtInt","format","fmtPerc","timeLoc","timeFormatLocale","timeItIT","fmtDate","fmtMonthYear","fmtISODate","useState","indexedData","setIndexedData","data","setData","indexedPopulation","setIndexedPopulation","population","setPopulation","useQueryParam","withDefault","NumberParam","populationFraction","setPopulationFraction","areas","setAreas","StringParam","area","setArea","Date","lastUpdate","setLastUpdate","lastDays","setLastDays","lastDate","setLastDate","doses","setDoses","administrations","setAdministrations","remainingAdministrations","setRemainingAdministrations","remainingDays","setRemainingDays","administrationsPerDay","setAdministrationsPerDay","avgAdministrationsLastDays","setAvgAdministrationsLastDays","targetMonth","setTargetMonth","getFullYear","targetYear","setTargetYear","targetDate","setTargetDate","targetAvgAdministrationsPerDay","setTargetAvgAdministrationsPerDay","nextMilestone","setNextMilestone","nextMilestoneRemainingDays","setNextMilestoneRemainingDays","nextMilestoneRemainingAdministrations","setNextMilestoneRemainingAdministrations","nextMilestoneTargetAvgAdministrationsPerDay","setNextMilestoneTargetAvgAdministrationsPerDay","dialogOpen","setDialogOpen","handleCloseDialog","useEffect","window","fetch","then","json","ultimo_aggiornamento","sort","a","b","ascending","order","Object","fromEntries","group","d","startDate","filter","endDate","res","descending","data_somministrazione","currentDate","currentMonth","getMonth","selectedMonth","console","log","totale","rollups","v","sum","slice","days","datetime","setDate","getDate","Math","round","total","Container","className","maxWidth","style","opacity","length","Grid","container","direction","justify","spacing","item","nome","component","Select","value","onChange","e","target","map","MenuItem","toLowerCase","TextField","size","inputProps","type","min","max","step","InputProps","endAdornment","InputAdornment","position","floor","months","m","i","toLocaleLowerCase","people","p","join","href","rel","Box","alignContent","xs","Help","color","onClick","title","he","decode","encodeURIComponent","location","Twitter","Facebook","LinkedIn","Mail","InsertLink","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","theme","createMuiTheme","palette","secondary","main","typography","fontFamily","ReactDOM","render","ReactRouterRoute","Route","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b0a8001d.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\nimport he from 'he'\n\nimport {\n  useQueryParam,\n  NumberParam,\n  StringParam,\n  withDefault\n} from 'use-query-params'\n\nimport {\n  TextField,\n  InputAdornment,\n  Select,\n  MenuItem,\n  Container,\n  Grid,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Button,\n  Box\n} from '@material-ui/core'\n\nimport {\n  Facebook,\n  Help,\n  InsertLink,\n  LinkedIn,\n  Mail,\n  Twitter\n} from '@material-ui/icons'\n\nimport { rollups, group, sum, ascending, descending } from 'd3-array'\nimport { formatLocale } from 'd3-format'\nimport { timeFormatLocale } from 'd3-time-format'\nimport numberItIT from 'd3-format/locale/it-IT.json'\nimport timeItIT from 'd3-time-format/locale/it-IT.json'\n\nimport './App.css'\n\nfunction App () {\n  const numberLoc = formatLocale(numberItIT)\n  const fmtInt = numberLoc.format(',d')\n  const fmtPerc = numberLoc.format('.1%')\n\n  const timeLoc = timeFormatLocale(timeItIT)\n  const fmtDate = timeLoc.format('%A %e %B %Y')\n  const fmtMonthYear = timeLoc.format('%B %Y')\n  const fmtISODate = timeLoc.format('%Y-%M-%d')\n\n  const [indexedData, setIndexedData] = useState({})\n  const [data, setData] = useState([])\n\n  const [indexedPopulation, setIndexedPopulation] = useState({})\n  const [population, setPopulation] = useState(6e7)\n  const [populationFraction, setPopulationFraction] = useQueryParam('populationFraction', withDefault(NumberParam, 0.7))\n\n  const [areas, setAreas] = useState([])\n  const [area, setArea] = useQueryParam('area', withDefault(StringParam, 'ITA'))\n\n  const [lastUpdate, setLastUpdate] = useState(new Date())\n  const [lastDays, setLastDays] = useQueryParam('lastDays', withDefault(NumberParam, 7))\n  const [lastDate, setLastDate] = useState(new Date())\n\n  const [doses, setDoses] = useQueryParam('doses', withDefault(NumberParam, 2))\n\n  const [administrations, setAdministrations] = useState(0)\n  const [remainingAdministrations, setRemainingAdministrations] = useState(0)\n  const [remainingDays, setRemainingDays] = useState(0)\n  const [administrationsPerDay, setAdministrationsPerDay] = useState([])\n  const [avgAdministrationsLastDays, setAvgAdministrationsLastDays] = useState([])\n\n  const [targetMonth, setTargetMonth] = useQueryParam('targetMonth', withDefault(NumberParam, 8))\n  const [targetYear, setTargetYear] = useQueryParam('targetYear', withDefault(NumberParam, (new Date()).getFullYear()))\n  const [targetDate, setTargetDate] = useState(new Date())\n  const [targetAvgAdministrationsPerDay, setTargetAvgAdministrationsPerDay] = useState(0)\n\n  const [nextMilestone, setNextMilestone] = useState({})\n  const [nextMilestoneRemainingDays, setNextMilestoneRemainingDays] = useState(0)\n  const [nextMilestoneRemainingAdministrations, setNextMilestoneRemainingAdministrations] = useState(0)\n  const [nextMilestoneTargetAvgAdministrationsPerDay, setNextMilestoneTargetAvgAdministrationsPerDay] = useState(0)\n\n  const [dialogOpen, setDialogOpen] = useState(false)\n\n  function handleOpenDialog () {\n    setDialogOpen(true)\n  }\n\n  function handleCloseDialog () {\n    setDialogOpen(false)\n  }\n\n  useEffect(() => {\n    window.fetch('../vaccinipertutti-data/last-update-dataset.json')\n      .then(data => data.json())\n      .then(data => { setLastUpdate(new Date(data.ultimo_aggiornamento)) })\n    window.fetch('../vaccinipertutti-data/popolazione_residente_2020.json')\n      .then(data => data.json())\n      .then(data => data.sort((a, b) => ascending(a.order, b.order)))\n      .then(data => {\n        setAreas(data)\n        setIndexedPopulation(Object.fromEntries(group(data, d => d.area)))\n      })\n    window.fetch('../vaccinipertutti-data/campaign-milestones.json')\n      .then(data => data.json())\n      .then(data => data.sort((a, b) => ascending(a.startDate, b.startDate)))\n      .then(data => data.filter(d => (new Date(d.startDate) < new Date()) && (new Date(d.endDate) > new Date())))\n      .then(data => { setNextMilestone(data?.[0]) })\n    window.fetch('../vaccinipertutti-data/somministrazioni-vaccini-summary-latest.json')\n      .then(res => res.json())\n      .then(res => res.data)\n      .then(data => data.sort((a, b) => descending(a.data_somministrazione, b.data_somministrazione)))\n      .then(data => {\n        setIndexedData(Object.fromEntries(group(data, d => d.area)))\n      })\n  }, [])\n\n  useEffect(() => {\n    const currentDate = new Date()\n    const currentMonth = new Date(currentDate.getFullYear(), currentDate.getMonth() + 1, 0)\n    const selectedMonth = new Date(targetYear, targetMonth + 1, 0)\n    console.log(currentMonth, selectedMonth)\n    if (selectedMonth > currentMonth) {\n      setTargetDate(new Date(targetYear, targetMonth + 1, 0))\n    } else {\n      setTargetMonth(targetDate.getMonth())\n      setTargetYear(targetDate.getFullYear())\n    }\n  }, [targetMonth, targetYear])\n\n  useEffect(() => {\n    setData(indexedData[area] || [])\n  }, [indexedData, area])\n\n  useEffect(() => {\n    if (indexedPopulation[area]) {\n      setPopulation(indexedPopulation[area][0].totale)\n    }\n  }, [indexedPopulation, area])\n\n  useEffect(() => {\n    setAdministrationsPerDay(\n      rollups(\n        data,\n        v => sum(v, d => d.totale),\n        d => fmtISODate(new Date(d.data_somministrazione))\n      )\n    )\n\n    setAdministrations(\n      sum(data, d => d.totale)\n    )\n  }, [data])\n\n  useEffect(() => {\n    setTargetAvgAdministrationsPerDay(remainingAdministrations / (targetDate - (new Date())) * 1000 * 60 * 60 * 24)\n  }, [targetDate, remainingAdministrations])\n\n  useEffect(() => {\n    setAvgAdministrationsLastDays(\n      sum(\n        administrationsPerDay.slice(1, lastDays + 1),\n        d => d[1]\n      ) / lastDays\n    )\n  }, [administrationsPerDay, lastDays])\n\n  useEffect(() => {\n    setRemainingAdministrations(\n      doses * population * populationFraction - administrations\n    )\n  }, [doses, population, populationFraction, administrations])\n\n  useEffect(() => {\n    const days = remainingAdministrations / avgAdministrationsLastDays\n    const datetime = new Date()\n    datetime.setDate(datetime.getDate() + Math.round(days))\n    setRemainingDays(days)\n    setLastDate(datetime)\n  }, [remainingAdministrations, avgAdministrationsLastDays])\n\n  useEffect(() => {\n    setNextMilestoneRemainingDays((new Date(nextMilestone.endDate) - new Date()) / (1000 * 60 * 60 * 24))\n    setNextMilestoneRemainingAdministrations((doses * nextMilestone.total) - administrations)\n  }, [doses, nextMilestone, administrations])\n\n  useEffect(() => {\n    setNextMilestoneTargetAvgAdministrationsPerDay(nextMilestoneRemainingAdministrations / nextMilestoneRemainingDays)\n  }, [nextMilestoneRemainingAdministrations, nextMilestoneRemainingDays])\n\n  return (\n    <>\n      <Container className='container' maxWidth='md' style={{ opacity: +!!data.length }}>\n        <Grid container direction='column' justify='center' spacing={2}>\n          <Grid item className='supTitle'>Termine previsto della campagna vaccinale in <em>{indexedPopulation[area]?.[0]?.nome}</em> contro Sars-CoV-2.</Grid>\n          <Grid item component='h1' className='mainTitle'>{fmtDate(lastDate)}</Grid>\n          <Grid item className='mainText'>\n            In <Select value={areas.length ? area : ''} onChange={e => setArea(e.target.value)}>{areas.map(a => <MenuItem key={a.area} value={a.area}>{a.nome}</MenuItem>)}</Select> si è iniziato a somministrare il primo vaccino il <em>27 dicembre 2020</em>.\n            A {lastUpdate.getDate() === (new Date()).getDate() ? 'oggi' : 'ieri'}, <em>{fmtDate(lastUpdate).toLowerCase()}</em>, sono state somministrate <em>{fmtInt(administrations)}</em> dosi,\n            ma ne mancano <em>{fmtInt(remainingAdministrations)}</em> per vaccinare il <TextField value={populationFraction * 100} onChange={e => setPopulationFraction(+e.target.value / 100)} size='small' inputProps={{ type: 'number', min: 60, max: 100, step: 5 }} InputProps={{ endAdornment: <InputAdornment position='end'>%</InputAdornment> }} /> della popolazione\n            con <TextField value={doses} onChange={e => setDoses(+e.target.value)} size='small' inputProps={{ type: 'number', min: 1, max: 2, step: 1 }} /> dosi a testa.\n          </Grid>\n          <Grid item className='mainText'>\n            Al ritmo di <em>{fmtInt(avgAdministrationsLastDays)}</em> somministrazioni al giorno tenuto negli ultimi <TextField value={lastDays} onChange={e => setLastDays(+e.target.value)} size='small' inputProps={{ type: 'number', min: 1, max: administrationsPerDay.length, step: 1 }} /> giorni,\n            mancano <em>{Math.floor(remainingDays / 365)} anni, {Math.floor((remainingDays % 365) / 30)} mesi e {Math.floor(remainingDays % 12)} giorni</em> prima di raggiungere <em>l'immunità di gregge</em>.\n          </Grid>\n          <Grid item className='mainText'>\n            Per ottenerla entro <Select value={targetMonth} onChange={e => setTargetMonth(+e.target.value)}>{timeItIT.months.map((m, i) => <MenuItem key={i} value={i}>{m.toLocaleLowerCase()}</MenuItem>)}</Select> <TextField value={targetYear} onChange={e => setTargetYear(+e.target.value)} size='small' inputProps={{ type: 'number', min: (new Date()).getFullYear(), max: (new Date()).getFullYear() + 10, step: 1 }} /> bisognerebbe somministrare una media di <em>{fmtInt(targetAvgAdministrationsPerDay)}</em> dosi al giorno.\n          </Grid>\n          {\n            nextMilestoneTargetAvgAdministrationsPerDay < avgAdministrationsLastDays\n              ? (\n                <Grid item className='mainText'>\n                  Il ritmo attuale è in linea con il prossimo obiettivo di vaccinare <em>{fmtInt(nextMilestone.total)}</em> persone ({nextMilestone.people?.map(p => p.type).join(', ')}) entro <em>{fmtMonthYear(new Date(nextMilestone.endDate))}</em>.\n                </Grid>\n              ) : (\n                <Grid item className='mainText'>\n                  Il ritmo attuale dovrebbe aumentare del <em>{fmtPerc((nextMilestoneTargetAvgAdministrationsPerDay - avgAdministrationsLastDays) / nextMilestoneTargetAvgAdministrationsPerDay)}</em> per raggiungere il prossimo obiettivo di vaccinare <em>{fmtInt(nextMilestone.total)}</em> persone ({nextMilestone.people?.map(p => p.type).join(', ')}) entro <em>{fmtMonthYear(new Date(nextMilestone.endDate))}</em>.\n                </Grid>\n              )\n          }\n          <Grid item className='footerText'>\n            Un progetto a cura dell'<a href='https://ondata.it' target='_blank' rel='noreferrer'>Associazione onData</a>.\n          </Grid>\n          <Box className='Flower lt' />\n          <Box className='Flower lb' />\n          <Box className='Cube rt icon'>\n            <Grid container justify='center' alignContent='center' direction='column'>\n              <Grid item xs><Help color='primary' onClick={handleOpenDialog} /></Grid>\n              <Grid item xs><a title='Condividi su Twitter' href={`https://twitter.com/share?text=\"${he.decode(`Termine previsto della campagna vaccinale in ${indexedPopulation[area]?.[0]?.nome} contro Sars-CoV-2: ${fmtDate(lastDate)}`)}\" via @ondatait&url=${encodeURIComponent(window.location.href)}`} target='_blank' rel='noreferrer'><Twitter color='primary' /></a></Grid>\n              <Grid item xs><a title='Condividi su Facebook' href={`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(window.location.href)}`} target='_blank' rel='noreferrer'><Facebook color='primary' /></a></Grid>\n              <Grid item xs><a title='Condividi su LinkedIn' href={`https://www.linkedin.com/shareArticle?mini=true&url=${encodeURIComponent(window.location.href)}`} target='_blank' rel='noreferrer'><LinkedIn color='primary' /></a></Grid>\n              <Grid item xs><a title='Condividi via e-mail' href={`mailto:?subject=\"${he.decode(`Termine previsto della campagna vaccinale in ${indexedPopulation[area]?.[0]?.nome} contro Sars-CoV-2: ${fmtDate(lastDate)}`)}\" via onData - APS&body=${he.decode(`In ${indexedPopulation[area]?.[0]?.nome} si è iniziato a somministrare il primo vaccino il 27 dicembre 2020`)}... Continua a leggere su ${encodeURIComponent(window.location.href)}`} target='_blank' rel='noreferrer'><Mail color='primary' /></a></Grid>\n              <Grid item xs><a title='Permalink' href={window.location.href} target='_blank' rel='noreferrer'><InsertLink color='primary' /></a></Grid>\n            </Grid>\n          </Box>\n          <Box className='Flower rb' />\n        </Grid>\n      </Container>\n      <Dialog\n        open={dialogOpen}\n        onClose={handleCloseDialog}\n        aria-labelledby='alert-dialog-title'\n        aria-describedby='alert-dialog-description'\n      >\n        <DialogTitle id='alert-dialog-title'>\"Vaccini per tutti\" by onData</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            \"Vaccini per tutti\" è un'applicazione sperimentale che permette di stimare i tempi di avanzamento della campagna di vaccinazione in Italia sulla base degli open data ufficiali del <a href='https://github.com/italia/covid19-opendata-vaccini/' target='_blank' rel='noreferrer'>Commissario straordinario per l'emergenza Covid-19 - Presidenza del Consiglio dei Ministri</a>, dell'<a href='https://www.epicentro.iss.it/vaccini/covid-19-piano-vaccinazione' target='_blank' rel='noreferrer'>Istituto Superiore di Sanità</a> e di <a href='http://demo.istat.it/popres/index.php?anno=2020&lingua=ita' target='_blank' rel='noreferrer'>ISTAT</a>.\n          </DialogContentText>\n          <DialogContentText>\n            L'applicazione è sviluppata e mantenuta da <a href='https://github.com/jenkin' target='_blank' rel='noreferrer'>@jenkin</a> per <a href='https://ondata.it/' target='_blank' rel='noreferrer'>onData APS</a>, associazione di promozione sociale che promuove l'apertura dei dati pubblici per renderli accessibili a tutte e tutti.\n          </DialogContentText>\n          <DialogContentText>\n            Il codice sorgente è open source e rilasciato sotto licenza MIT su Github: <a href='https://github.com/ondata/vaccinipertutti' target='_blank' rel='noreferrer'>ondata/vaccinipertutti</a>. Questa pagina è ospitata dal servizio <a href='https://pages.github.com/' target='_blank' rel='noreferrer'>Github Pages</a> e fa esclusivamente uso di cookie tecnici: non traccia né profila in alcun modo gli utenti. Se vuoi fare una segnalazione, puoi <a href='https://github.com/ondata/vaccinipertutti/issues' target='_blank' rel='noreferrer'>aprire una issue</a>.\n          </DialogContentText>\n          <DialogContentText>\n            Puoi sostenere l'attività di onData in molti modi, <a href='https://sostieni.ondata.it/' target='_blank' rel='noreferrer'>dai un'occhiata</a>!\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseDialog} color='secondary' autoFocus>\n            Ho capito, grazie!\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { QueryParamProvider } from 'use-query-params'\n\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\n\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nconst theme = createMuiTheme({\n  palette: {\n    secondary: {\n      main: '#e82f7d'\n    }\n  },\n  typography: {\n    fontFamily: [\n      '\"Titillium Web\"',\n      'sans-serif'\n    ]\n  }\n})\n\nReactDOM.render(\n  <Router>\n    <QueryParamProvider ReactRouterRoute={Route}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryParamProvider>\n  </Router>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}